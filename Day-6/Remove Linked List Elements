/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeElements(ListNode* head, int val) {
        if(head == nullptr){
            return head;
        }
        ListNode* temp = head;
         while(temp!=nullptr && temp->val == val){
                temp = temp->next;
            }
            head = temp;
            if(head == nullptr){
                return head;
            }
           ListNode* prev = nullptr;
    
           while(temp!=nullptr){
            if(temp!=nullptr && temp->val == val){
                 prev ->next = temp->next;
            }
            else {
             prev = temp;
            }
            temp  = temp->next;
           }
        return head;
    }
};
