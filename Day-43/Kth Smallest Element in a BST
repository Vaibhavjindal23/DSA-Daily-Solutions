/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void inorder(TreeNode* root, vector<int>&ans){
       if(root == nullptr) return;
       inorder(root->left, ans);
       ans.push_back(root->val);
       inorder(root->right, ans);
    }
    int kthSmallest(TreeNode* root, int k) {
        if(root == nullptr) return 0;
        vector<int>ans;
        inorder(root,ans);
        int n = ans.size(); 
        if(k > n || k < 1) return 0;
        return ans[k-1];
    }
};
