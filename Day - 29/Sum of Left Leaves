/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int helper(TreeNode* root, bool isleft){
        if(root == nullptr) return 0; 
        if(isleft && root->left == nullptr && root->right == nullptr){
            return root->val;
        }
        int rightsum = helper(root->right, false);
        int leftsum = helper(root->left, true);
        return rightsum + leftsum;
    }
    int sumOfLeftLeaves(TreeNode* root) {
        if(root == nullptr) {
            return 0;
        }
      return helper(root,false);
    }

};
