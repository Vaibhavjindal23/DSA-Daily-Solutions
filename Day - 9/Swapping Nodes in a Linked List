/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    int length(ListNode* head){
        if(head == nullptr){
            return 0;
        }
        int count = 0;
        ListNode * temp = head;
        while(temp!=nullptr){
              count++;
              temp = temp->next;
        }
        return count;
    }
    ListNode* swapNodes(ListNode* head, int k) {
              if(head == nullptr || head->next == nullptr){
                return head;
              }
            
              int copy = k;
              ListNode* temp = head;
              while(k>1){
                  k--;
                  temp = temp->next;
              }
              int remaining = length(head) - copy +1 ;
              ListNode* temp1 = head;
              while(remaining > 1){
                remaining--;
                temp1 = temp1->next;
              }
              swap(temp->val, temp1->val);
    return head;
    }
};
