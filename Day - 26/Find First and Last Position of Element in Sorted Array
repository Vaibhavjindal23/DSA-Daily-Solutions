class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        int n = nums.size();
        vector<int>ans(2,-1);
        int low = 0; 
        int high = n-1; 
        while(low <= high){
            int mid = low + (high - low)/2;
            if(nums[mid] == target) {
                ans[0] = mid;
                high = mid -1;
            }
            else if(nums[mid] < target){
                 low = mid + 1;
            }
            else {
                high = mid -1;
            }
        }

        int loww= 0; int highh = n-1;
        while(loww<=highh){
            int midd = loww + (highh - loww) / 2;
            if(nums[midd] == target){
                ans[1] = midd;
                loww = midd + 1;
            }
            else if(nums[midd] < target){
                loww = midd + 1;
            }
            else {
                highh = midd -1;  
                 }
        }
        return ans;
    }
};
