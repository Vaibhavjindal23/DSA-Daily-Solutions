class Solution {
public:
    int longestValidParentheses(string s) {
        int n = s.size();
        stack<int>st;   int max_ans = 0; int ans =0;
        for(int i = 0; i<n; i++){
           if(s[i] == '('){
            st.push(i);
           }
           else if(!st.empty() && s[i] == ')' && s[st.top()] == '('){
            st.pop();
             if(!st.empty()) {
                ans = i - st.top();
             }
             else ans = i + 1;
             max_ans = max(max_ans, ans);
           }
           else {
            st.push(i);
            ans = 0; 
           }
        }
    return max_ans ;
    }
};
